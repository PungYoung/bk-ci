2101001=パイプライン: サブパイプラインIDが存在しません
2101002=パイプライン: サブパイプラインが存在しません
2101003=パイプライン: 最大7つのビューを同時保存可能
2101004=パイプライン: ビュー({0})が存在しません
2101005=極狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名
2101006=パイプライン: ユーザー({0})にビュー({1})削除権限がありません
2101007=パイプライン: パイプラインリスト長は100を超えられません
2101008=パイプライン: ユーザーに{0}権限がありません
2101009=パイプライン: パイプラインソースが一致しません({0})
2101010=パイプライン: プラグインが存在しません
2101011=パイプライン: パイプラインModelが不正です
2101012=パイプライン: パイプライン異常発生:{0}
2101013=パイプライン名が使用済み
2101014=パイプライン: テンプレートパイプラインは編集不可
2101015=パイプライン: パイプライン名が長すぎます
2101016=パイプライン: パイプラインは既に存在します
2101017=パイプライン: 品質ゲートがブロックしたタスク[{0}]が存在しません
2101018=パイプライン: ユーザー({0})が承認者リストに含まれていません
2101019=パイプライン: パイプラインは{0}によりビルドキャンセルされました。{1}秒後にお試しください
2101020=パイプライン: ビルド起動が頻繁すぎます
2101021=パイプライン: このパイプラインは手動起動不可
2101022=パイプライン: このパイプラインはリモートトリガー不可
2101023=パイプライン: WebhookのIDと名前が同時に空です
2101024=パイプライン: 復元対象パイプラインが存在しません（削除済み/復元済み）
2101025=パイプライン: StageにJobが不足
2101026=パイプライン: 管理者のみテンプレート操作可能
2101027=パイプライン: パイプライン設定が存在しません
2101028=パイプライン: テンプレート名を空文字列にできません
2101029=パイプライン: パイプライン変数と定数が重複
2101030=パイプライン: テンプレート名が既に存在します
2101031=パイプライン: テンプレートにインスタンスが存在するため削除不可
2101032=パイプライン: 開発ストアに連携済み。削除前にストアから削除してください
2101033=テンプレートが他プロジェクトで使用中のため削除不可
2101034=パ極狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリイプライン: テンプレートが存在しません
2101035=パイプライン: ソーステンプレートが存在しません
2101036=パイプライン: パイプラインテンプレートパラメータ列挙失敗
2101037=パイプライン: パイプラインはトリガーStageを1つしか持てません
2101038=パイプライン: パイプラインが存在しません
2101039=パイプライン: パイプラインモデルが存在しません
2101040=パイプライン: パイプラインモデル指定ビルドコンテナ{0}が存在しません
2101041=パイプライン: パイプラインのスケジュールトリガー保存失敗
2101042=パイプライン: Jobには少なくとも1つのタスクプラグインが必要
2101043=パイプライン: パイプライン{0}のスケジュールトリガー削除失敗
2101044=SVNはタグ未対応
2101045=リポジトリIDが空です
2101046=リポジトリ名が空です
2101047=パイプライン: パイプラインがロックされました
2101048=パイプライン: スケジュールトリガーのタイミングパラメータが不正
2101049=パイプライン: パイプラインキュー満杯
2101050=パイプライン: ユーザー({0})はプロジェクト({1})でパイプライン{2}の権限を持っていません
2101051=モデルでストアイメージ使用中だがcodeが空
2101052=モデルでストアイメージ使用中だがversionが空
2101053=ストア/サードパーティソース以外のイメージvalueは空不可
2101054=変数名[{0}]は英字/数字/アンダースコアのみ使用可、先頭数字不可
2101055=Stage[{0}]のアクセス制御設定不正
2101056=パイプライン説明が長すぎます
2101057=スケジュールトリガーのタイミングパラメータ[{0}]は秒単位トリガー不可
2101058=パイプライン: 入力buildIdとpipelineIdが不一致
2101059=パイプラインにプラグインマーケット未存在のプラグインが含まれます
2101060=ユーザー情報取得失敗
2101061=プロジェクトが存在しません
2101062=パイプライン: プラグイン[{0}]はこの環境で実行不可
2101063=パイプライン: テンプレート下のパイプラインインスタンス{0}更新中、後で再試行
2101064=パイプライン: 各ModelはFinallyStageを1つだけ含み最後に配置
2101065=パイプライン: finallyStageのJob実行条件設定エラー: {0}
2101066=パイプライン: 通常stage下の[{0}]Job実行条件設定エラー: {0}
2101067=パイプライン: Model情報不完全、Stage[{0}] Job[{1}]にプラグインなし
2101068=パイプライン: パイプラインモデル超過、閾値[{0}]文字、発行者に連絡
2101069=パイプライン: パイプライン下の[{0}]の[{1}]数超過、閾値[{2}]個、発行者に連絡
2101070=パイプライン: プラグイン[{0}]のパラメータ[{1}]値超過、閾値[{2}]文字、発行者に連絡
2101071=パイプライン: final stage実行中はキャンセル不可
2101072=Stage[{0}]の承認グループ[{1}]に実行可能担当者設定なし
2101073=Stage[{0}]の承認グループID[{1}]が存在しません
2101074=Stage[{0}]のアクセス制御フラグ[{1}]が不正
2101075=パイプライン起動準備失敗{0}
2101076=このテンプレートは更新不可
2101077=リポジトリIDとリポジトリ名が両方空
2101078=テンプレートのバージョン数は{0}個を超えられません
2101079=テンプレートインスタンス更新数[{0}]が最大値[{1}]超過、パラメータ調整または担当者に相談
2101080=プロジェクト[{0}]は無効化中、起動不可
2101081=ビルドデータ期限切れ、rebuildで再試行してください
2101082=Stage承認パラメータ{0}が4000文字制限超過
2101083=このパイプラインバージョンにビルド記録が存在するため削除不可
2101084=Job[{0}]のタイムアウト設定パイプライン変数[{1}]値[{2}]が範囲[{3}](分)超過
2101085=Job[{0}]のプラグイン[{1}]のタイムアウト設定パイプライン変数[{2}]値[{3}]が範囲[{4}](分)超過
2101086=Job[{0}]の排他グループ[{1}]タイムアウト設定パイプライン変数[{2}]値[{3}]が範囲[{4}](分)超過
2101087=無効なGITリポジトリ
2101088=無効なTGITリポジトリ
2101089=無効なSVNリポジトリ
2101090=無効なGITHUBリポジトリ
2101091=無効なp4リポジトリ
2101092=コードリポジトリ{0}が存在しません
2101093=コードリポジトリ({0})はSVNコードリポジトリではありません
2101094=Svnディレクトリ取得失敗, msg:{0}
2101095=パイプラインのスケジュールトリガー保存失敗！タイマーパラメータ過長の可能性
2101096=キュー中: 現在のビルドはキュー待機中
2101097=Job[{0}]のマトリックスYAML設定エラー: {1}
2101098={0} は {1} パイプラインではありません
2101099=該当パイプラインが見つかりません
2101100=サブパイプライン循環呼び出し不可,循環パイプライン:projectId:{0},pipelineId:{1}
2101101=このプロジェクトは最大{0}本のパイプラインしか作成不可
2101102=パイプライン: 3回リトライ失敗
2101103=パイプライン: 更新失敗: {0}
2101104=パイプライン: {0}はプロジェクト{1}の管理者ではありません
2101105=キュー中: 現在のビルドは排他グループ({0})でキュー待機中
2101106=プラグインインストール失敗
2101107=一時停止されたパイプラインが実行開始
2101108=パイプライン: Stage[{0}]が承認待ち状態ではありません
2101109={0} elementサイズ超過
2101110=jobが未完了状態のためリトライ不可
2101111=キュー待機タイムアウト、実行キャンセル! [{0}]
2101112=品質ゲート(准出)検出失敗
2101113={0}実行が({1})分到達、タイムアウト終了!
2101114=stageが失敗状態でないためリトライ不可
2101115=Job実行のカスタム変数を設定してください
2101116=バックグラウンドサービスタスク実行エラー
2101117= バックグラウンドサービス実行エラー
2101118=プロジェクト {0} 下で{1}ビュー{2}が見つかりません
2101119=環境名が未初期化
2101120=環境IDが未初期化
2101121=以下の環境名が存在しません、パイプラインを修正してください
2101122=ユーザーに以下の環境操作権限がありません！環境:
2101123=以下の環境idが存在しません、パイプラインを修正してください！id:
2101124=サポート対象環境タイプ: {0}
2101125=パイプライングループのビュー範囲不一致
2101126=パイプライングループ作成上限到達
2101127=パイプライングループ名重複: {0}
2101128=パイプライングループ名無効
2101129=パイプライン: 現在のビルドは実行中、リトライリクエスト再送不可
2101130=品質ゲート(准入)検出失敗
2101131=Excel形式エラー、またはファイル不存在
2101132=コールバックurl無効
2101133=ユーザー（{0}）に（{1}）プロジェクト権限がありません
2101134=コールバック履歴({0})が存在しません
2101135=コールバックリトライ失敗
2101136=コールバック記録({0})が存在しません
2101137=callback作成失敗,失敗原因:{0}
2101138=パイプライン: パイプラインスケジュールトリガー時にコード変更なし
2101139=例外: パイプライン基本ビルドデータSummary不存在、管理者に連絡
2101140=リリース拒否、このバージョンは最新バージョンより古いため
2101141=パイプライン: 再起動待ちビルド{0}は既に再起動中
2101142= 最大キュー数無効
2101143=パイプライングループ修正権限なし
2101144=変数名[{0}]ソースが一意でない、変数名変更またはプラグイン出力名前空間追加: {1}
2101145=({0})と({1})のjobId循環依存
2101146=({0})のjobId({1})が既に存在
2101147=最大キュー時間無効
2101148=説明
2101149=手動トリガー
2101150=スケジュールトリガー
2101151=リモートトリガー
2101152=webhookトリガー
2101153=サービストリガー
2101154=パイプライントリガー
2101155=ビルド情報説明
2101156=他のビルドプロセス異常参考情報、ログ出力用自由追加
2101157=<a href="/console/environment/{0}/nodeDetail/{1}">Agent詳細確認/Agent Detail</a>'
2101158=ビルドトリガー
2101159=ビルドプロセスハートビートタイムアウト{0}秒 \n 原因可能性: \n 1. ビルドエージェントネットワーク不通、ネットワークプロキシ/企業セキュリティ認証セッション期限切れ確認 \n 2. 業務ビルドプロセスがOS/他プログラム強制終了、負荷低減後再試行\n 3. 参考リンク[Link] 他ビルドプロセス異常参考情報\n 4. プラットフォーム障害による大規模タイムアウト
2101160=1プロジェクトタググループは10個まで
2101161=同一グループ下最大12個タグ追加可
2101162=1タグ最大20文字入力
2101163=パイプラインビルド[{0}]が存在しません
2101164=パイプライン[{0}]が存在しません
2101165=サブパイプライン循環呼び出し
2101166=ビルド中のStage[{0}]が存在しません
2101167=ビルド中のStage[{0}]が承認待ち状態ではありません
2101168=実行条件式解析失敗
2101169=トリガー承認未通過
2101170=トリガーが承認状態にありません
2101171=リモートトリガートークン生成失敗
2101172=該当サブパイプラインビルド記録が見つかりません
2101173=該当サブパイプラインが見つかりません
2101174=ユーザー（{0}) にパイプライン({1})情報({2})取得権限がありません
2101175=サブパイプラインパラメータフィルタリング失敗
2101176=テンプレート下に権限なしのプラグインが存在
2101177=パイプラインオーケストレーション数無効
2101178=最大同時実行数無効
2101179=プラグイン{0}のパイプライン情報アクセス権限なし、コンポーネント管理者に連絡
2101180=グループ({0})が既に存在
2101181=グループタグ({0})が既に存在
2101182=パイプライン: パイプラインビルド終了済、操作不可
2101183=ユーザーにテンプレート操作権限がありません

2101184=パイプラインバージョン({0})が存在しません
2101185=このパイプラインにドラフトバージョンが存在しません
2101186=YAML変換中に例外発生
2101187=定数({0})の値が空
2101188=パイプラインYAMLファイル拡張子{0}不正
2101189=パイプラインのstageが空
2101190=このバージョンは実行不可

2101191=トリガー詳細{0}が存在しません
2101192=トリガーイベント{0}が存在しません
2101193=トリガータイプ{0}はリプレイ未対応
2101194=リプレイパイプラインIDを空にできません
2101195=Webhook {0} が存在しません

2101196=gitプロジェクト情報取得失敗
2101197=mr情報取得失敗
2101198=mrレビュー情報取得失敗
2101199=mr変更情報取得失敗
2101200=gitファイルツリー取得失敗
2101201=yamlファイル内容取得失敗
2101202=ファイル情報取得失敗
2101203=リモートターゲットブランチからYAML更新のため REBASE または MERGE 実行
2101204=DEVNETゲートウェイリクエストタイムアウト
2101205=不明エラー
2101206=PACモード有効化で自動生成されたため、手動変更/削除不可
2101207=PACモード有効化で自動生成されたため、手動追加/削除不可
2101208=PACモード有効化で自動生成されたため、パイプライン削除はコードリポジトリで操作
2101209=commit情報取得失敗
2101210=PACモード有効化中、コードリポジトリデフォルトブランチのyamlファイル削除後、パイプライン削除
2101211=yamlファイル内容を空にできません
2101212=yamlファイル形式エラー、yaml/yml拡張子と1階層サブディレクトリのみ対応
2101213=パイプラインはファイル{0}にバインド済、変更不可
2101214=パイプラインはコードリポジトリ{0}にバインド済、変更不可
2101215=YAMLファイル[{0}]が既に存在、パイプライン[{1}]に連携済
2101216=リリースにはコードリポジトリdeveloper以上権限必須
2101217=デフォルトブランチが存在しません、コードリポジトリ初期化要
2101218=現在のコードリポジトリ関連ユーザー({0})がOAUTH承認未実施、コードリポジトリ認証タイプ切替要
2101219=正式バージョンと比較して更新なし、確認要
2101221=taskのスキップは許可されません
2101230=通知タイプ設定不正、確認要
2101231=通知内容が空、確認要
2101232={0}でパイプラインビルドエージェント再利用排他グループ使用時、具体的なJobId宣言必須（空不可）
2101233=パイプラインビルドエージェント再利用排他グループノード {0} が再利用する {1} が存在しない、または非サードパーティビルドエージェントノード
2101234={0} 下で、ビルドエージェント再利用排他グループノード {1} と再利用される {2} ノードのスケジューリングタイプが異なり、AgentIdとAgentEnvは相互再利用不可
2101235=ブランチ作成失敗: {0}
2101236=ユーザー[{0}]にコードリポジトリ[{1}]のブランチ作成権限がありません
2101237=ファイル作成失敗: {0}
2101238=ユーザー[{0}]にコードリポジトリ[{1}]のファイル作成権限がありません
2101239=mr作成失敗: {0}
2101240=ユーザー[{0}]にコードリポジトリ[{1}]のmr作成権限がありません
2101241=工蜂コードリポジトリ[{0}]が存在しないかアクセス権限なし
2101242=工蜂サービス異常
2101243=スケジュールトリガーSVNブランチを空にできません
2101244={0}
2101245=スケジュールトリガーコードリポジトリが存在しません
2101246=スケジュールトリガー[PAC監視]設定不正、現在パイプラインはPAC未有効
2101247=スケジュールトリガーブランチを空にできません
2101248=スケジュールトリガーブランチ[{0}]に変更なし
2101249=スケジュールトリガーブランチ[{0}]が存在しません
2101250=パイプラインJob:{0}のjobIdが空か長さが{1}桁超過
2101251=パイプラインJob:{0}の単一ノード/集約ノード同時実行設定は1000未満の正の整数必須
2101252=スケジュールトリガーブランチ[{0}]不明エラー
2101253=[{0}]の条件式長さが{1}桁超過
2101254=ビルド入力パラメータ[{0}]必須、空不可
2101255=ビルドエージェント重複起動、現在状態：{0}
2101256=パイプライン変数{0}値が4000文字制限超過
2101257={0} 下で、ビルドエージェント再利用排他グループノード {1} と再利用される {2} ノードの前後順序不明確、変数使用には明確な前後順序が必要
2101258=ビルドデータが期限切れ、再試行時間はビルド開始時間から{0}日以上遅れてはいけません
2101259=ターゲットブランチは空にできません
2101260=サポートされていないブランチコミットタイプ
2101266=現在のビルドバージョンは最新バージョンではありません、再選択してください
2101267=コードリポジトリ情報は空にできません
2101268=トリガーイベントメッセージボディが存在しません
2101269=デフォルトブランチファイル[{0}]は削除済み、デフォルトブランチを同期してください
2101270=gitタイプコードリポジトリのみPAC有効化をサポート
2101271=ユーザー [{0}] にリポジトリ [{1}] PUSH権限がありません
2101272=同じトリガーパラメータでは現在パイプライン最新バージョン {0} のトリガー条件を満たさず、続行するとエラー発生可能性あり、続行しますか？
2101273=stageが実行中状態でないため、プラグインレベルのリトライはできません
2101274=パラメータ[{0}]値がシステム制限(4K)超過、起動失敗
2101275=処理パイプライン数[{0}]が最大値{1}超過、パラメータ調整または担当者に相談
2101276=パイプライン[{0}]は実行中、アーカイブ不可
2101277=リトライ対象プラグインが失敗/キャンセル状態でないためリトライ不可
2101279=プラグイン【ID:{0}】が存在しないか承認可能状態ではありません
2101280=ユーザー [{0}] にリポジトリ [{1}] のプッシュ権限がありません、リポジトリ管理者に連絡し権限追加
ATOM_POST_EXECUTE_TIP=###Tip:これは[step{0}]{1}によってフックされた後処理アクションです###
ci.build-no=ビルド番号、推奨ビルド番号有効時使用
ci.build_num=現在ビルドの一意ID、1から自動増分
ci.build_msg=ビルド情報、最大128文字、取得ルール:<br/>- Pushイベント：コミットメッセージ<br/>- Mrイベント：Mrタイトル<br/>- Noteイベント：コメント内容<br/>- Issueイベント：Issueタイトル<br/>- Crイベント：Crタイトル<br/>- Tagイベント：タグ名<br/>- 手動トリガー：トリガー時入力ビルド情報
ci.pipeline_creator=パイプライン作成者
ci.pipeline_modifier=パイプライン最終更新者
ci.pipeline_version=パイプラインバージョン
ci.project_name=プロジェクト名
ci.build_id=現在ビルドID
ci.pipeline_id=パイプラインID
ci.pipeline_name=パイプライン名
ci.project_id=プロジェクトID、プロジェクト一意識別子
ci.build_start_type=ビルド起動方式：MANUAL/TIME_TRIGGER/WEB_HOOK/SERVICE/PIPELINE/REMOTE
ci.actor=現在ビルド起動者
ci.workspace=現在Jobのワークスペース
ci.failed_tasknames=パイプライン実行失敗全TASK、形式：TASK別名,TASK別名,TASK別名
ci.failed_tasks=パイプライン実行失敗全TASK、形式：[STAGE別名][JOB別名]TASK別名、複数失敗JOBは改行(\\n)区切り
ci.remark=パイプライン備考、スクリプトプラグインで echo ::set-remark xxx 設定可能
# Stepパラメータ
step.name=step 名称
step.name.remark=未指定時、対応プラグイン名
step.id=現在プラグインTASK ID、32桁、一意
step.id.remark=システム自動生成 (e-開始)
step.retry-count-manual=現在ステップ手動リトライ回数
step.retry-count-auto=現在ステップ自動リトライ回数
steps.<step-id>.status=step 状態：SUCCEED/FAILED/CANCELED/SKIP
steps.<step-id>.status.remark=continue-on-error=true 且つ step失敗時、status=SUCCEED, outcome=FAILED、下流ステップで取得可能
steps.<step-id>.outcome=step 結果：SUCCEED/FAIL极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名ED/CANCELED/SKIP
steps.<step-id>.outcome.remark=continue-on-error=true 且つ step失敗時、status=SUCCEED, outcome=FAILED、下流ステップで取得可能
# Jobパラメータ
job.name=job 名称
job.name.remark=未指定時、設定順 job-1/job-2/.../job-N
job.id=現在pipeline下job一意識別子
job.id.remark=ユーザーカスタム時、一意性保証、未指定時システム生成
job.os=現在job実行OS：LINUX/WINDOWS/MACOS
job.container.network=現在job所在ネットワーク領域：ID极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名C/DEVNET/OA
job.container.node_alias=サードパーティビルドエージェント使用時有効、job割当ノード別名
job.stage_id=job 所属 stage id
job.stage_name=job 所属 stage name
job.index=matrix job下、0開始索引、matrix job解析順序依存
job.index.remark=index 経由 matrix job下指定job詳細出力取得可能
jobs.<job-id>.status=現在job状態：SUCCEED/FAILED/CANCELED/SKIP
jobs.<job-id>.status.remark=continue-on-error=true 且つ job失敗時、status=SUCCEED, outcome=FAILED、下流ステップで取得可能
jobs.<job-id>.outcome=現在job結果：SUCCEED/FAILED/CANCELED/SKIP
jobs.<job-id>.outcome.remark=continue-on-error=true 且つ job失敗時、status=SUCCEED, outcome=FAILED、下流ステップで取得可能

BUILD_NUM_RULE_STYLE=BUILD_NUM_RULE_STYLEカスタムビルド番号ルール：英数字/スペース/-/_/./:/{/}/"/+/?/$ 使用可、1-256文字
CONST_PROCESS_VIEW_LABEL_ALL=全パイプライン
CONST_PROCESS_VIEW_LABEL_FAVORITE=お気に入り
CONST_PROCESS_VIEW_LABEL_MY=マイパイプライン
CONST_PROCESS_VIEW_LABEL_PRIVATE=個人ビュー
CONST_PROCESS_VIEW_LABEL_PROJECT=プロジェクトビュー
CONST_PROCESS_VIEW_LABEL_SYSTEM=システムビュー
bkAdministrator=管理者
bkAuditResult=ステップ承認終了、結果: [{0}]、承認者: {1}
bkAuditTimeout=承認タイムアウト
bkAutomaticExportNotSupported=### この環境は自動エクスポート未対応 ###
bkAutomaticExportNotSupportedImage=### このイメージは自動エクスポート未対応 ###
bkBeeCiNotSupport=工蜂CIは旧版プラグイン未対応
bkBuildClustersThrough=### runs-on: macos-10.15 でmacOS共有ビルドクラスタ使用可
bkBuildInReviewStatus=プロジェクト【{0}】パイプライン【{1}】#{2} ビルドは承認待ち状態
bkBuildInfo=ビルド情報
bkDetail=詳細
bkBuildStatus=ビルド状態
bkBuildVariables=ビルド変数
bkBuildVariablesValue=ビルド変数値
bkBuildHistory=ビルド履歴
bkCheckFileCountAndVersion=ファイル数/バージョン確認：
bkCheckIntegrityYaml=YAML完全性確認、または開発ストア推奨プラグイン切替後エクスポート
bkCheckOperatingSystemCorrect=存在環境手動修正、OS正誤確認
bkCheckPoolField=JOB({0})のPoolフィールド確認必須
bkCheckTheWebData=Webデータ確認：
bkContinue=続行
bkComputerViewDetails={0}\n\nPC詳細: {1}\n携帯詳細: {2}
bkConstructionMachineNotSupported=# 注意: 現在ビルドエージェントタイプ未対応
bkContactPlugDeveloper=、プラグイン開発者連絡
bkCreateResourceOperation=リソース作成 操作開始\n
bkCreateResourcesOperationParameters=リソース作成 操作パラメータ：
bkCreator=作成者
bkEmailNotificationContentEmpty=メール通知内容空
bkEmptyTitle=メッセージタイトル空(タイトル空)
bkEnterUrlAddressImage=###イメージURL直接入力(TLinux2.2共通イメージ)、認証存在時credentialsフィールド追加###
bkExperience极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名PathEmpty=体験パス空
bkExport=エクスポート、
bkExportSystemCredentials=# 注意: システム認証情報(ユーザー名/パスワード)エクスポート未対応、streamプロジェクト設定で再追加！ \n
bkExportTime=# エクスポート時間：
bkFailedUploadFile=ファイルアップロード失敗：
bkFindRecommendedReplacementPlug=開発ストアで推奨置換プラグイン検索！
bkFirstStageEnvNotEmpty=第一ステージ環境空不可
bkIdentifiedSensitiveInformation=# ①機密情報検出、エクスポート未対応\n
bkIncorrectNotificationMethod=通知方式不正
bkInvalidNotificationRecipient=通知受信者無効：
bkMessageContentEmpty=メッセージ本文空(本文空)
bkMessageSubjectEmpty=メール件名空
bkModificationGuidelines=プラグイン開発者に改修依頼
bkMutexGroupSingleBuild=現在排他グループ[{0}]同時実行ビルドタスク1件のみ、キューイング開始！
bkNoMatchFileDistribute=配布対象ファイル不一致： {0}
bkNoRightExportPipeline=ユーザー({0})プロジェクト({1})下パイプラインエクスポート権限なし
bkNodeNotExistUnderNewBusiness=# 注意: 【{0}】ノード【{1}】新業務下存在しない可能性、
bkNonTimedTriggerSkip=非スケジュールトリガー、スキップ
bkRetryTimedTriggerSkip=スケジュールトリガー再試行、スキップ
bkNotConfirmedCanExecuted=プラグイン {0} 工蜂CI実行可否未確認
bkNotExistUnderNewBusiness=# 注意: 【{0}】環境【{1}】新業務下存在しない可能性、
bkNotSupportCurrentConstructionMachine=# 注意: 工蜂CI現在ビルドエージェントタイプ未対応
bkNoteDefaultXcodeVersion=注意：デフォルトXcodeバージョン12.2、カスタム必要時JOB下xcode-select実行切替 ###
bkOldPlugNotSupport=内蔵旧プラグインエクスポート未対応、マーケットプラグイン使用 ###
bkOnlyVisiblePcgBusiness=# 注意: 【{0}】PCG業務のみ可視、現在業務PCG所属確認！ \n
bkOverrule=却下
bkTrigger=トリガー
bkOperationCompletedSuccessfully=バージョンCDNアップロード状態 操作 正常終了\n
bkOperationParameters=\"動的リソースバージョンアップロード\" 操作パラメータ：
bkParametersBeExported=# \n# tips: 一部パラメータエクスポート時[フィールド制限、手動入力]存在、手動指定必要。原因：\n
bkPipelineName=パイプライン名
bkPipelinedId=# パイプラインID：
bkPleaseManuallyModify=存在ノード手動修正
bkPleaseUseStageAudit=手動承認プラグイン→Stage承認使用 ###
bkPlugNotSupported=# 注意: プラグイン【{0}({1})】エクスポート未対応
bkPollingWaitForQualityResult=第 {0} 回品質結果ポーリング待機
bkProcessingCurrentReportedTaskPleaseWait=現在報告タスク処理中、少々お待ちください
bkPullGitWarehouseCode=Gitリポジトリコード取得
bkQualityCheckIntercepted=品質ゲート({0})検出ブロック
bkQualityCheckResult=品質ゲート結果
bkQualityCheckSucceed=品質ゲート({0})検出通過
bkQualityToBeReview=品質ゲート({0})承認待ち!承認者: {1}
bkQueryFavoritePipeline=お気に入りパイプライン検索：
bkQueryPipelineInfo=パイプライン情報検索：
bkQueryVersionUpload=バージョンCDNアップロード状態 操作開始\n
bkQuickApprovalMoa=【MOA高速承認】
bkQuickApprovalPc=【PC高速承認】
bkReceiverEmpty=受信者空(受信者空)
bkRecipientEmpty=受信者空
bkRemoteCallSourceIp=今回リモート呼出元IP：[{0}]
bkResponseResult=プレリリース単数/複数チャネル応答結果：
bkSearchStore=開発ストア新プラグイン検索
bkSendWecomContent=企業微信内容送信：({0}) 宛 {1}
bkSendWecomContentFailed=企業微信内容送信：({0}) 宛 {1}失敗：
bkSendWecomContentSuccessfully=企業微信内容送信：({0}) 宛 {1}成功
bkSendWecomMessage=企業微信メッセージ送信：\n{0}\n宛先\n{1}
bkSensitiveInformationInParameters=# 注意: [プラグイン]入力パラメータ機密情報存在可能性、注意深く確認、共有注意！！！ \n
bkStartPerformingGcloudOperation=ファイル（{0}）Gcloud操作実行開始、詳細gcloud公式サイト参照： 
bkStartReleaseOperation=プレリリース 操作開始\n
bkStartUploadOperation=\"動的リソースバージョンアップロード\" 操作開始
bkStreamNotSupport=# 注意: [プラグイン]Stream旧版プラグイン未対応、開発ストア新プラグイン検索 \n
bkSuccessfullyDistributed=プロジェクト跨ぎ成果物配布成功、合計{0}ファイル配布
bkSuccessfullyFailed=プロジェクト跨ぎ成果物配布失敗、
bkTriggeredByGitEventPlugin=【Gitイベントトリガー】プラグインMRリクエストフック【同源同ターゲットブランチ時、キュー最新トリガータスク保持】設定有効、今回ビルド新トリガービルド
bkUnknownContextExists=# ②一部フィールド検証時未知コンテキスト存在、エクスポート未対応\n
bkUserNoPipelineExecutePermissions=ユーザー（{0}) パイプライン({1})実行権限なし
bkVersionExperienceCreatedSuccessfully=バージョン体験({0})作成成功
bkViewIdAndNameCannotBeEmptyTogether=<viewId>と<viewName>同時空不可、<viewName>入力時<isProject>必須
bkViewResult=結果参照：
bkWaitQueryVersion=\"バージョンCDNアップロード状態\" 操作完了待機： \n
bkWecomNotice=企業微信通知内容：
bkWorkerBeeCiNotSupport=# 注意: [プラグイン]工蜂CIプロジェクト依存サービス未対応（認証情報/ノード等）、
LimitMessage=[フィールド制限、手動入力]
templateType.constraint=ストア提供
templateType.customize=カスタムテンプレート
templateType.public=共通テンプレート
unclassified=未分類

bkPendingApproval=ステップ承認待ち
bkReviewers=承認待ち者
bkReviewer=承認者
bkDescription=承認説明
bkParams=承認パラメータ
bkAuditResultsApprove=承認結果：続行
bkAuditResultsReject=承認結果：却下
bkFinalApproval=ステップ承認終了
bkReviewComments=承認意見
bkQueueTimeout=キューイングタイムアウト
bkJobQueueTimeout=Jobキューイングタイムアウト、並行設定確認
bkTriggerUser=トリガー者
bkTclsEnvironmentMessage=TCLS環境取得失敗、ユーザー名/パスワード正誤確認、エラー情報：
bkTclsEnvironment=TCLS環境取得失敗、ユーザー名/パスワード正誤確認
bkStartUser=実行者
bkWhenTheCustomVariablesAreAllSatisfied=[カスタム変数全満足時実行しない]
bkCustomVariablesAreAllSatisfied=[カスタム変数全満足時実行]
bkCheckTaskRunCondition=プラグイン実行条件確認：
bkTaskDisabled=プラグイン無効化 = true
bkOnlyWhenPreviousTaskHasFailed=[前タスク失敗時のみ実行]
bkItDoesNotRunUnlessItIsCanceled=[前タスク失敗時でも実行、キャンセル時除く]
bkRunsEvenIfCanceled=[前タスク失敗時でも実行、キャンセル時でも実行]
bkJobFailureOrCancel=Job失敗/キャンセル skip=true
bkCheckJobRunCondition=Job実行条件確認：
bkReleaseLock=排他グループロック解放
bkGetLocked=ロック取得 ロック期間：
bkQueueDisabled=キューイング無効
bkCurrentNumberOfQueues=[現在待機数[{0}], 待機時間[{1}} 秒]
bkQueueFull=キュー満杯
bkEnqueue=現在待機数[{0}]. キュー待機
bkMutuallyExclusiveGroups=Job#{0}|排他グループMutex[{1}]|
bkLocked=ロック中
bkClick=参照
bkCurrent=現在
bkPreviousStageCancel=[上流Stageキャンセル時]：
bkPreviousStageFailed=[上流Stage失敗時]：
bkPreviousStageSuccess=[上流Stage成功時]：
bkUnexecuteTask=ビルド終了、スキップ
bkConditionInvalid=実行条件判断失敗
bkUnexecutePostactionTask=[SystemLog]終了指令受信
bkMaxParallel=並行上限：
bkManuallySkipped=手動スキップ
bkEvent={0}イベント
bkWarehouseEvents=リポジトリイベント
bkVmStartAlready=ビルドエージェント重複起動：
bkContinueWhenError=失敗自動スキップ
bkMutexWaiting=排他中
bkQueuing=キューイング中
bkPending=承認中
bkQualityIn=品質ゲート(准入)
bkQualityOut=品質ゲート(准出)
bkBuildFinishedAndDenyPause=ビルド終了、停止要求拒否
commonShutdownSuccessContent=【${{%s}}】- 【${{%s}}】#${{%s}} 実行成功、所要時間${{%s}}, トリガー者: ${{%s}}。
commonShutdownFailureContent=【${{%s}}】- 【${{%s}}】#${{%s}} 実行失敗、所要時間${{%s}}, トリガー者: ${{%s}}。
bkBeforePosition=准入-条件満足時実行制御点
bkAfterPosition=准出-条件満足時後続プラグイン実行
bkTgitPushEventDesc=[{0}] コミット [<a href="{1}" target="_blank">{2}</a>] <span class="trigger-user">{3}</span> プッシュ 
bkTgitIssueCreatedEventDesc=Issue [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> 作成 
bkTgitIssueUpdatedEventDesc=Issue [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> 更新 
bkTgitIssueClosedEventDesc=Issue [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> クローズ 
bkTgitIssueReopenedEventDesc=Issue [<a href="{0}" target="_blank">!{极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名1}</a>] <span class="trigger-user">{2}</span> 再オープン 
bkTgitMrCreatedEventDesc=マージリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> 作成
bkTgitMrUpdatedEventDesc=マージリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> 編集
bkTgitMrClosedEventDesc=マージリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> クローズ
bkTgitMrReopenedEventDesc=マージリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> 再オープン
bkTgitMrPushUpdatedEventDesc=マージリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> ソースブランチコミットトリガー
bkTgitMrMergedEventDesc=マージリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> マージ済
bkTgitTagPushEventDesc=[{0}] タグ作成 [<a href="{1}" target="_blank">{2}</a>] <span class="trigger-user">{3}</span> プッシュ
bkTgitTagDeleteEventDesc=[{0}] タグ [<a href="{1}" target="_blank">{2}</a>] <span class="trigger-user">{3}</span> 削除
bkTgitNoteEventDesc=コメント [<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> 投稿 
bkTgitReviewCreatedEventDesc=コードレビュー [<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> 作成
bkTgitReviewApprovedEventDesc=コードレビュー [<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> 承認済
bkTgitReviewApprovingEventDesc=コードレビュー [<a href="{0}" target="_blank">{1}</a>] レビュー中
bkTgitReviewClosedEventDesc=コードレビュー [<a href="{0}" target="_blank">{极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名1}</a>] クローズ済
bkTgitReviewChangeDeniedEventDesc=コードレビュー [<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> 拒否
bkTgitReviewChangeRequiredEventDesc=コードレビュー [<a href="{0}" target="_blank">{1}</a>] <极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名span class="trigger-user">{2}</span> 修正要求
bkGithubPushEventDesc=[{0}] コミット [<a href="{1}" target="_blank">{2}</a>] <span class="trigger-user">{3}</span> プッシュ
bkGithubCreateBranchEventDesc=ブランチ [<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> 作成
bkGithubCreateTagEventDesc=タグ [<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> プッシュ
bkGithubPrEventDesc=プルリクエスト [<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> {3}
bkP4EventDesc=変更 {0} <span class="trigger-user">{1}</span> {2}
bkSvnCommitEventDesc=コミット [{0}] <span class="trigger-user">{1}</span> プッシュ
bkManualStartEventDesc=<span class="trigger-user">{0}</span> 手動トリガー
bkRemoteStartEventDesc=<span class="trigger-user">{0} [{1}]</span> リモートトリガー
bkServiceStartEventDesc=<span class="trigger-user">{0}</span> トリガーパイプライン呼出
bkPipelineStartEventDesc=[<a href="{1}" target="_blank">{2}</a>] <span class="trigger-user">{0}</span> サブパイプライン呼出
bkTimingStartEventDesc=<span class="trigger-user">{0}</span> スケジュールトリガー
bkEventReplayDesc=イベント [<a target="_self" href="?eventId={0}">{0}</a>] <span class="trigger-user">{1}</span> リプレイ
bkRepoTriggerEventTypeNotMatch=イベントタイプトリガー条件不一致
bkRepoTriggerBranchNotMatch=ブランチ[{0}]トリガー条件不一致
bkRepoTriggerBranchIgnored=ブランチ[{0}]除外対象
bkRepoTriggerTargetBranchNotMatch=MRターゲットブランチ[{0}]トリガー条件不一致
bkRepoTriggerTargetBranchIgnored=MRターゲットブランチ[{0}]除外対象
bkRepoTriggerSourceBranchNotMatch=MRソースブランチ[{0}]トリガー条件不一致
bkRepoTriggerSourceBranchIgnored=MRソースブランチ[{0}]除外対象
bkRepoTriggerUserNotMatch=トリガー者[{0}]不一致
bkRepoTriggerUserIgnored=トリガー者[{0}]除外対象
bkRepoTriggerPathNotMatch=パストリガー条件不一致
bkRepoTriggerPathIgnored=パス除外対象
bkRepoTriggerTagNameNotMatch=タグ名[{0}]トリガー条件不一致
bkRepoTriggerTagNameIgnored=タグ名[{0}]除外対象
bkRepoTriggerTagSourceBranchNotMatch=タグソースブランチトリガー条件不一致
bkRepoTriggerThirdFilterNotMatch=カスタムトリガー制御不一致
bkRepoTriggerNoteContentNotMatch=コメント内容不一致
bkRepoTriggerNoteActionNotMatch=コメントタイプ不一致
bkRepoTriggerReviewAction极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名NotMatch=レビュータイプ不一致
bkRepoTriggerIssueActionNotMatch=Issueアクション不一致
bkTriggerConditionNotMatch=トリガー条件不一致
bkMergeYamlCreateFileTitle=[{0}]新規パイプライン[{1}]
bkMergeYamlUpdateFileTitle=[{0}]パイプライン更新[{1}]
bkBuildQueueWaitingForConcurrency=ビルド並行モード：{0}、並行グループ[{1}]の[{2}]ビルド実行完了待機中、現在実行中ビルド{3}
bkBuildQueueWaiting=ビルド並行モード：{0}、[{1}]ビルド実行完了待機中
bkBuildCancelByConcurrency=ビルド並行グループ[{0}]優先度高ビルド{1}によりキャンセル
bkBuildTaskRetryNotice=プラグイン[{0}]実行失敗、第[{1}]回自動リトライ予定。失敗原因:{2}。
bkStageReviewEmptyViewer=承認者不在、システム自動却下

operationLogType.NORMAL_SAVE_OPERATION=通常保存操作
operationLogType.CREATE_PIPELINE_AND_DRAFT=ドラフト作成
operationLogType.CREATE_DRAFT_VERSION=新ドラフト基盤
operationLogType.UPDATE_DRAFT_VERSION=ドラフト更新
operationLogType.CREATE_BRANCH_VERSION=ブランチバージョン新規作成
operationLogType.UPDATE_BRANCH_VERSION=ブランチバージョン更新
operationLogType.RELEASE_MASTER_VERSION=バージョンリリース
operationLogType.DISABLE_PIPELINE=パイプライン無効化
operationLogType.ENABLE_PIPELINE=パイプライン有効化
operationLogType.ADD_PIPELINE_OWNER=実行者追加
operationLogType.ADD_PIPELINE_TO_GROUP=パイプライングループ追加
operationLogType.MOVE_PIPELINE_OUT_OF_GROUP=パイプライングループ移出
operationLogType.UPDATE_PIPELINE_BY_OPENAPI=設定更新新バージョン
operationLogType.RESET_RECOMMENDED_VERSION_BUILD_NO=推奨ビルド番号リセット

trigger.build.param.basic=パイプライン組み込み変数
trigger.build.param.step=Step 組み込み変数
trigger.build.param.job=Job 組み込み変数
trigger.build.param.codeGitWebHookTrigger.ci.repo_type.desc=トリガーコードリポジトリタイプ
trigger.build.param.codeGitWebHookTrigger.ci.repo_url.desc=トリガーコードリポジトリURL
trigger.build.param.codeGitWebHookTrigger.ci.repo.desc=トリガーコードリポジトリフルネーム（例：group_name/repo_name）
trigger.build.param.codeGitWebHookTrigger.ci.repo_group.desc=トリガーコードリ極狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名ポジトリグループ名
trigger.build.param.codeGitWebHookTrigger.ci.repo_name.desc=トリガーコードリポジトリ名
trigger.build.param.codeGitWebHookTrigger.ci.repo_alias极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名_name.desc=BlueKing CI別名
trigger.build.param.codeGitWebHookTrigger.ci.event.desc=トリガーイベントタイプ
trigger.build.param.codeGitWebHookTrigger.ci.event_url.desc=トリガーイベントURL
trigger.build.param.codeGitWebHookTrigger.ci.branch.desc=トリガーブランチ/Tag
trigger.build.param.codeGitWebHookTrigger.ci.build_msg.desc=ビルド情報（イベント別取得ルール）：<br/>- Push:最終コミット情報<br/>- Mr:Mrタイトル<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Crタイトル<br/>- Tag:Tag名
trigger.build.param.codeGitWebHookTrigger.ci.commit_message.desc=コミット情報（イベント別取得ルール）：<br/>- Push:最終コミット情報<br/>- Mr:ソースブランチ最終コミット情報<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Cr最終コミット情報<br/>- Tag:Tag最終コミット情報
trigger.build.param.codeGitWebHookTrigger.ci.action.desc=トリガーアクション
trigger.build.param.codeGitWebHookTrigger.ci.actor.desc=トリガー者
trigger.build.param.codeGitWebHookTrigger.ci.before_sha.desc=前回pushのcommitSha（Push-commit/Tag-push有効）
trigger.build.param.codeGitWebHookTrigger.ci.before_sha_short.desc=前回pushのcommitSha先頭8桁（Push-commit/Tag-push有効）
trigger.build.param.codeGitWebHookTrigger.ci.sha.desc=コミットID
trigger.build.param.codeGitWebHookTrigger.ci.sha_short.desc=コミットID先頭8桁
trigger.build.param.codeGitWebHookTrigger.ci.operation_kind.desc=PUSH操作タイプ：<br/>- create:ブランチ作成/通常MRマージ<br/>- delete:ブランチ削除<br/>- update:ファイル更新<br/>- update_nonfastforward:non-fast-forwardコミット
trigger.build.param.codeGitWebHookTrigger.ci.mr_proposer.desc=マージリクエスト作成者/コミッター
trigger.build.param.codeGitWebHookTrigger.ci.head_repo_url.desc=マージリクエストターゲットリポジトリURL
trigger.build.param.codeGitWebHookTrigger.ci.base_repo_url.desc=マージリクエストソースリポジトリURL
trigger.build.param.codeGitWebHookTrigger.ci.head_ref.desc=マージリクエストターゲットブランチ
trigger.build.param.codeGitWebHookTrigger.ci.base_ref.desc=マージリクエストソースブランチ
trigger.build.param.codeGitWebHookTrigger.ci.mr_id.desc=マージリクエストID
trigger.build.param.codeGitWebHookTrigger.ci.mr_iid.desc=マージリクエストシーケンス
trigger.build.param.codeGitWebHookTrigger.ci.mr_desc.desc=マージリクエスト説明
trigger.build.param.codeGitWebHookTrigger.ci.mr_title.desc=マージリクエストタイトル
trigger.build.param.codeGitWebHookTrigger.ci.mr_url.desc=マージリクエストリンク
trigger.build.param.codeGitWebHookTrigger.ci.mr_reviewers.desc=マージリクエスト承認者（必須承認者含む）
trigger.build.param.codeGitWebHookTrigger.ci.milestone_name.desc=マージリクエストマイルストーン名
trigger.build.param.codeGitWebHookTrigger.ci.milestone_id.desc=マージリクエストマイルストーンID
trigger.build.param.codeGitWebHookTrigger.ci.mr_tapd_issues.desc=マージリクエスト関連TAPD議題
trigger.build.param.codeGitWebHookTrigger.ci.commit_author.desc=Tagコミットユーザー
trigger.build.param.codeGitWebHookTrigger.ci.tag_from.desc=Tagソース（ブランチ/コミットsha）
trigger.build.param.codeGitWebHookTrigger.ci.tag_desc.desc=Tag説明
trigger.build.param.codeGitWebHookTrigger.ci.issue_title.desc=Issueタイトル
trigger.build.param.codeGitWebHookTrigger.ci.issue_id.desc=Issue ID
trigger.build.param.codeGitWebHookTrigger.ci.issue_iid.desc=Issueシーケンス
trigger.build.param.codeGitWebHookTrigger.ci.issue_description.desc=Issue説明
trigger.build.param.codeGitWebHookTrigger.极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名ci.issue_state.desc=Issue状態
trigger.build.param.codeGitWebHookTrigger.ci.issue_owner.desc=Issue作成者
trigger.build.param.codeGitWebHookTrigger.ci.issue_milestone_id.desc=IssueマイルストーンID
trigger.build.param.codeGitWebHookTrigger.ci.note_comment.desc=コメント内容
trigger.build.param.codeGitWebHookTrigger.ci.n极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名ote_id.desc=コメントID
trigger.build.param.codeGitWebHookTrigger.ci.repo_id.desc=コードリポジトリID
trigger.build.param.codeGitWebHookTrigger.ci.note_type.desc=コメントタイプ
trigger.build.param.codeGitWebHookTrigger.ci.note_author.desc=コメント作成者
trigger.build.param.codeGitWebHookTrigger.ci.create_time.desc=コメント作成時間
trigger.build.param.codeGitWebHookTrigger.ci.modify_time.desc=コメント更新時間
trigger.build.param.codeGitWebHookTrigger.ci.review_id.desc=コードレビューID
trigger.build.param.codeGitWebHookTrigger.ci.review_iid.desc=レビューシーケンス
trigger.build.param.codeGitWebHookTrigger.ci.review_type.desc=レビュータイプ
trigger.build.param.codeGitWebHookTrigger.ci.review_reviewers.desc=レビュー担当者（カンマ区切り）
trigger.build.param.codeGitWebHookTrigger.ci.review_state.desc=レビュー状態
trigger.build.param.codeGitWebHookTrigger.ci.review_owner.desc=レビューイベント作成者
trigger.build.param.codeGitWebHookTrigger.common=Gitイベントトリガー - 共通変数
trigger.build.param.codeGitWebHookTrigger.PUSH=Gitイベントトリガー - プッシュイベント
trigger.build.param.codeGitWebHookTrigger.TAG_PUSH=Gitイベントトリガー - Tagプッシュイベント
trigger.build.param.codeGitWebHookTrigger.MERGE_REQUEST=Gitイベントトリガー - マージリクエストイベント
trigger.build.param.codeGitWebHookTrigger.MERGE_REQUEST_ACCEPT=Gitイベントトリガー - マージリクエストマージ済イベント
trigger.build.param.codeGitWebHookTrigger.ISSUES=Gitイベントトリガー - 議題イベント
trigger.build.param.codeGitWebHookTrigger.NOTE=Gitイベントトリガー - コメントイベント
trigger.build.param.codeGitWebHookTrigger.REVIEW=Gitイベントトリガー - レビューイベント
trigger.build.param.codeTGitWebHookTrigger.ci.repo_type.desc=トリガーコードリポジトリタイプ
trigger.build.param.codeTGitWebHookTrigger.ci.repo_url.desc=トリガーコードリポジトリURL
trigger.build.param.codeTGitWebHookTrigger.ci.repo.desc=トリガーコードリポジトリフルネーム（例：group_name/repo_name）
trigger.build.param.codeTGitWebHookTrigger.ci.repo_group.desc=トリガーコードリポジトリグループ名
trigger.build.param.codeTGitWebHookTrigger.ci.repo_name.desc=トリガーコードリポジトリ名
trigger.build.param.codeTGitWebHookTrigger.ci.repo_alias_name.desc=BlueKing CI別名
trigger.build.param.codeTGitWebHookTrigger.ci.event.desc=トリガーイベントタイプ
trigger.build.param.codeTGitWebHookTrigger.ci.event_url.desc=トリガーイベントURL
trigger.build.param.codeTGitWebHookTrigger.ci.branch.desc=トリガーブランチ/Tag
trigger.build.param.codeTGitWebHookTrigger.ci.build_msg.desc=ビルド情報（イベント別取得ルール）：<br/>- Push:最終コミット情報<br/>- Mr:Mrタイトル<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Crタイトル<br/>- Tag:Tag名
trigger.build.param.codeTGitWebHookTrigger.ci.commit_message.desc=コミット情報（イベント別取得ルール）：<br/>- Push:最終コミット情報<br/>- Mr:ソースブランチ最終コミット情報<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Tag:Tag最終コミット情報
trigger.build.param.codeTGitWebHookTrigger.ci.action.desc=トリガーアクション
trigger.build.param.codeTGitWebHookTrigger.ci.actor.desc=トリガー者
trigger.build.param.codeTGitWebHookTrigger.ci.before_sha.desc=前回pushのcommitSha（Push-commit/Tag-push有効）
trigger.build.param.codeTGitWebHookTrigger.ci.before_sha_short.desc=前回pushのcommitSha先頭8桁（Push-commit/Tag-push有効）
trigger.build.param.codeTGitWebHookTrigger.ci.sha.desc=コミットID
trigger.build.param.codeTGitWebHookTrigger.ci.sha_short.desc=コミットID先頭8桁
trigger.build.param.codeTGitWebHookTrigger.ci.operation_kind.desc=PUSH操作タイプ：<br/>- create:ブランチ作成/通常MRマージ<br/>- delete:ブランチ削除<br/>- update:ファイル更新<br/>- update_nonfastforward:non-fast-forwardコミット
trigger.build.param.codeTGitWebHookTrigger.ci.mr_proposer.desc=マージリクエスト作成者/コミッター
trigger.build.param.codeTGitWebHookTrigger.ci.head_repo_url.desc=マージリクエストターゲットリポジトリURL
trigger.build.param.codeTGitWebHookTrigger.ci.base_repo_url.desc=マージリクエストソースリポジトリURL
trigger.build.param.codeTGitWebHookTrigger.ci.head_ref.desc=マージリクエストターゲットブランチ
trigger.build.param.codeTGitWebHookTrigger.ci.base_ref.desc=マージリクエストソースブランチ
trigger.build.param.codeTGitWebHookTrigger.ci.mr_id.desc=マージリクエストID
trigger.build.param.codeTGitWebHookTrigger.ci.mr_iid.desc=マージリクエストシーケンス
trigger.build.param.codeTGitWebHookTrigger.ci.mr_desc.desc=マージリクエスト説明
trigger.build.param.codeTGitWebHookTrigger.ci.mr_title.desc=マージリクエストタイトル
trigger.build.param.codeTGitWebHookTrigger.ci.mr_url.desc=マージリクエストリンク
trigger.build.param.codeTGitWebHookTrigger.ci.mr_reviewers.desc=マージリクエスト承認者（必須承認者含む）
trigger.build.param.codeTGitWebHookTrigger.ci.milestone_name.desc=マージリクエストマイルストーン名
trigger.build.param.codeTGitWebHookTrigger.ci.milestone_id.desc=マージリクエストマイルストーンID
trigger.build.param.codeTGitWebHookTrigger.ci.mr_tapd_issues.desc=マージリクエスト関連TAPD議題
trigger.build.param.codeTGitWebHookTrigger.ci.commit_author.desc=Tagコミットユーザー
trigger.build.param.codeTGitWebHookTrigger.ci.tag_from.desc=Tagソース（ブランチ/コミットsha）
trigger.build.param.codeTGitWebHookTrigger.ci.tag_desc.desc=Tag説明
trigger.build.param.codeTGitWebHookTrigger.ci.issue_title.desc=Issueタイトル
trigger.build.param.codeTGitWebHookTrigger.ci.issue_id.desc=Issue ID
trigger.build.param.codeTGitWebHookTrigger.ci.issue_iid.desc=Issueシーケンス
trigger.build.param.codeTGitWebHookTrigger.ci.issue_description.desc=Issue説明
trigger.build.param.codeTGitWebHookTrigger.ci.issue_state.desc=Issue状態
trigger.build.param.codeTGitWebHookTrigger.ci.issue_owner.desc=Issue作成者
trigger.build.param.codeTGitWebHookTrigger.ci.issue_milestone_id.desc=IssueマイルストーンID
trigger.build.param.codeTGitWebHookTrigger.ci.note_comment.desc=コメント内容
trigger.build.param.codeTGitWebHookTrigger.ci.note_id.desc=コメントID
trigger.build.param.codeTGitWebHookTrigger.ci.repo_id.desc=コードリポジトリID
trigger.build.param.codeTGitWebHookTrigger.ci.note_type.desc=コメントタイプ
trigger.build.param.codeTGitWebHookTrigger.ci.note_author.desc=コメント作成者
trigger.build.param.codeTGitWebHookTrigger.ci.create_time.desc=コメント作成時間
trigger.build.param.codeTGitWebHookTrigger.ci.modify_time.desc=コメント更新時間
trigger.build.param.codeTGitWebHookTrigger.ci.review_id.desc=コードレビューID
trigger.build.param.codeTGitWebHookTrigger.ci.review_iid.desc=レビューシーケンス
trigger.build.param.codeTGitWebHookTrigger.ci.review_type.desc=レビュータイプ
trigger.build.param.codeTGitWebHookTrigger.ci.review_reviewers.desc=レビュー担当者（カンマ区切り）
trigger.build.param.codeTGitWebHookTrigger.ci.review_state.desc=レビュー状態
trigger.build.param.codeTGitWebHookTrigger.ci.review_owner.desc=レビューイベント作成者
trigger.build.param.codeTGitWebHookTrigger.PUSH=TGitイベントトリガー - プッシュイベント
trigger.build.param.codeTGitWebHookTrigger.TAG_PUSH=TGitイベントトリガー - Tagプッシュイベント
trigger.build.param.codeTGitWebHookTrigger.MERGE_REQUEST=TGitイベントトリガー - マージリクエストイベント
trigger.build.param.codeTGitWebHookTrigger.MERGE_REQUEST_ACCEPT=TGitイベントトリガー - マージリクエストマージ済イベ极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名ント
trigger.build.param.codeTGitWebHookTrigger.ISSUES=TGitイベントトリガー - 議題イベント
trigger.build.param.codeTGitWebHookTrigger.NOTE=TGitイベントトリガー - コメントイベント
trigger.build.param.codeTGitWebHookTrigger.REVIEW=TGitイベントトリガー - レビューイベント
trigger.build.param.codeTGitWebHookTrigger.common=TGitイベントトリガー - 共通変数
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_type.desc=トリガーコードリポジトリタイプ
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_url.desc=トリガーコードリポジトリURL
trigger.build.param.codeGitlabWebHookTrigger.ci.repo.desc=トリガーコードリポジトリフルネーム（例：group_name/repo_name）
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_group.desc=トリガーコードリポジトリグループ名
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_name.desc=トリガーコードリポジトリ名
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_alias_name.desc=BlueKing CI別名
trigger.build.param.codeGitlabWebHookTrigger.ci.event.desc=トリガーイベントタイプ
trigger.build.param.codeGitlabWebHookTrigger.ci.event_url.desc=トリガーイベントURL
trigger.build.param.codeGitlabWebHookTrigger.ci.branch.desc=トリガーブランチ/Tag
trigger.build.param.codeGitlabWebHookTrigger.ci.build_msg.desc=ビルド情報（イベント別取得ルール）：<br/>- Push:最終コミット情報<br/>- Mr:Mrタイトル<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Crタイトル<br/>- Tag:Tag名
trigger.build.param.codeGitlabWebHookTrigger.ci.commit_message.desc=コミット情報（イベント別取得ルール）：<br/>- Push:最終コミット情報<br/>- Mr:ソースブランチ最終コミット情報<br/>- Tag:Tag最終コミット情報
trigger.build.param.codeGitlabWebHookTrigger.ci.action.desc=トリガーアクション
trigger.build.param.codeGitlabWebHookTrigger.ci.actor.desc=トリガー者
trigger.build.param.codeGitlabWebHookTrigger.ci.before_sha.desc=前回pushのcommitSha（Push-commit/Tag-push有効）
trigger.build.param.codeGitlabWebHookTrigger.ci.before_sha_short.desc=前回pushのcommitSha先頭8桁（Push-commit/Tag-push有効）
trigger.build.param.codeGitlabWebHookTrigger.ci.sha.desc=コミットID
trigger.build.param.codeGitlabWebHookTrigger.ci.sha_short.desc=コミットID先頭8桁
trigger.build.param.codeGitlabWebHookTrigger.ci.operation_kind.desc=PUSH操作タイプ：<br/>- create:ブランチ作成/通常MRマージ<br/>- delete:ブランチ削除<br/>- update:ファイル更新<br/>- update_nonfastforward:non-fast-forwardコミット
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_proposer.desc=マージリクエスト作成者/コミッター
trigger.build.param.codeGitlabWebHookTrigger.ci.head_repo_url.desc=マージリクエストターゲットリポジトリURL
trigger.build.param.codeGitlabWebHookTrigger.ci.base_repo_url.desc=マージリクエストソースリポジトリURL
trigger.build.param.codeGitlabWebHookTrigger.ci.head_ref.desc=マージリクエストターゲットブランチ
trigger.build.param.codeGitlabWebHookTrigger.ci.base_ref.desc=マージリクエストソースブランチ
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_id.desc=マージリクエストID
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_iid.desc=マージリクエストシーケンス
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_desc.desc=マージリクエスト説明
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_title.desc=マージリクエストタイトル
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_url.desc=マージ极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名リクエストリンク
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_reviewers.desc=マージリクエスト承認者（必須承認者含む）
trigger.build.param.codeGitlabWebHookTrigger.ci.milestone_name.desc=マージリクエストマイルストーン名
trigger.build.param.codeGitlabWebHookTrigger.ci.milestone_id.desc=マージリクエストマイルストーンID
trigger.build极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名.param.codeGitlabWebHookTrigger.ci.commit_author.desc=Tagコミットユーザー
trigger.build.param.codeGitlabWebHookTrigger.ci.tag_from.desc=Tagソース（ブランチ/コミットsha）
trigger.build.param.codeGitlabWebHookTrigger.ci.tag_desc.desc=Tag説明
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_title.desc=Issueタイトル
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_id.desc=Issue ID
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_iid.desc=Issueシーケンス
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_description.desc=Issue説明
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_state.desc=Issue状態
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_owner.desc=Issue作成者
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_milestone_id.desc=IssueマイルストーンID
trigger.build.param.codeGitlabWebHookTrigger.ci.note_comment.desc=コメント内容
trigger.build.param.codeGitlabWebHookTrigger.ci.note_id.desc=コメントID
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_id.desc=コードリポジトリID
trigger.build.param.codeGitlabWebHookTrigger.ci.note_type.desc=コメントタイプ
trigger.build.param.codeGitlabWebHookTrigger.ci.note_author.desc=コメント作成者
trigger.build.param.codeGitlabWebHookTrigger.ci.create_time.desc=コメント作成時間
trigger.build.param.codeGitlabWebHookTrigger.ci.modify_time.desc=コメント更新時間
trigger.build.param.codeGitlabWebHookTrigger.ci.review_id.desc=コードレビューID
trigger.build.param.codeGitlabWebHookTrigger.ci.review_iid.desc=レビューシーケンス
trigger.build.param.codeGitlabWebHookTrigger.ci.review_type.desc=レビュータイプ
trigger.build.param.codeGitlabWebHookTrigger.ci.review_reviewers.desc=レビュー担当者（カンマ区切り）
trigger.build.param.codeGitlabWebHookTrigger.ci.review_state.desc=レビュー状態
trigger.build.param.codeGitlabWebHookTrigger.ci.review_owner.desc=レビューイベント作成者
trigger.build.param.codeGitlabWebHookTrigger.common=Gitlabイベントトリガー - 共通変数
trigger.build.param.codeGitlabWebHookTrigger.PUSH=Gitlabイベントトリガー - プッシュイベント
trigger.build.param.codeGitlabWebHookTrigger.TAG_PUSH=Gitlabイベントトリガー - Tagプッシュイベント
trigger.build.param.codeGitlabWebHookTrigger.MERGE_REQUEST=Gitlabイベントトリガー - マージリクエストイベント
trigger.build.param.codeGitlabWebHookTrigger.MERGE_REQUEST_ACCEPT=Gitlabイベントトリガー - マージリクエストマージ済イベント
trigger.build.param.codeGitlabWebHookTrigger.ISSUES=Gitlabイベントトリガー - 議題イベント
trigger.build.param.codeGitlabWebHookTrigger.NOTE=Gitlabイベントトリガー - コメントイベント
trigger.build.param.codeGitlabWebHookTrigger.REVIEW=Gitlabイベントトリガー - レビューイベント
trigger.build.param.codeGithubWebHookTrigger.ci.repo_type.desc=トリガーコードリポジトリタイプ
trigger.build.param.codeGithubWebHookTrigger.ci.repo_url.desc=トリガーコードリポジトリURL
trigger.build.param.codeGithubWebHookTrigger.ci.repo.desc=トリガーコードリポジトリフルネーム（例：group_name/repo_name）
trigger.build.param.codeGithubWebHookTrigger.ci.repo_group.desc=トリガーコードリポジトリグループ名
trigger.build.param.codeGithubWebHookTrigger.ci.repo_name.desc=トリガーコードリポジトリ名
trigger.build.param.codeGithubWebHookTrigger.ci.repo_alias_name.desc=BlueKing CI別名
trigger.build.param.codeGithubWebHookTrigger.ci.event.desc=トリガーイベントタイプ
trigger.build.param.codeGithubWebHookTrigger.ci.event_url.desc=トリガーイベントURL
trigger.build.param.codeGithubWebHookTrigger.ci.branch.desc=トリガーブランチ/Tag
trigger.build.param.codeGithubWebHookTrigger.ci.build_msg.desc=ビルド情報（イベント別取得ルール）：<br/>- Push:最終コミット情報<br/>- Pr:Prタイト極狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名ル<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Crタイトル<br/>- create:タグ/ブランチ名
trigger.build.param.codeGithubWebHookTrigger.ci.commit_message.desc=コミット情報（イベント別取得ルール）：<br/>- Push:最終コミット情報<br/>- Pr:Prソースブランチ最終コミット情報<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Cr最終コミット情報<br/>- Tag:タグ/ブランチ最終コミット情報
trigger.build.param.codeGithubWebHookTrigger.ci.action.desc=トリガーアクション
trigger.build.param.codeGithubWebHookTrigger.ci.actor.desc=トリガー者
trigger.build.param.codeGithubWebHookTrigger.ci.before_sha.desc=Push-commit時、前回pushのsha
trigger.build.param.codeGithubWebHookTrigger.ci.before_sha_short.desc=Push-commit時、前回pushのsha先頭8桁
trigger.build.param.codeGithubWebHookTrigger.ci.sha.desc=コミットID
trigger.build.param.codeGithubWebHookTrigger.ci.sha_short.desc=コミットID先頭8桁
trigger.build.param.codeGithubWebHookTrigger.ci.mr_proposer.desc=プルリクエスト作成者/コミッター
trigger.build.param.codeGithubWebHookTrigger.ci.head_repo_url.desc=プルリクエストターゲットコードリポジトリURL
trigger.build.param.codeGithubWebHookTrigger.ci.base_repo_url.desc=プルリクエストソースコードリポジトリURL
trigger.build.param.codeGithubWebHookTrigger.ci.head_ref.desc=プルリクエストターゲットブランチ
trigger.build.param.codeGithubWebHookTrigger.ci.base_ref.desc=プルリクエストソースブランチ
trigger.build.param.codeGithubWebHookTrigger.ci.mr_id.desc=プルリクエストID
trigger.build.param.codeGithubWebHookTrigger.ci.mr_iid.desc=プルリクエストシリアル番号
trigger.build.param.codeGithubWebHookTrigger.ci.mr_desc.desc=プルリクエスト説明
trigger.build.param.codeGithubWebHookTrigger.ci.mr_title.desc=プルリクエストタイトル
trigger.build.param.codeGithubWebHookTrigger.ci.mr_url.desc=プルリクエストリンク
trigger.build.param.codeGithubWebHookTrigger.ci.mr_reviewers.desc=プルリクエスト承認者(必須承認者含む)
trigger.build.param.codeGithubWebHookTrigger.ci.milestone_name.desc=プルリクエストマイルストーン名
trigger.build.param.codeGithubWebHookTrigger.ci.milestone_id.desc=プルリクエストマイルストーンID
trigger.build.param.codeGithubWebHookTrigger.ci.commit_author.desc=タグコミットユーザー
trigger.build.param.codeGithubWebHookTrigger.ci.issue_title.desc=議題タイトル
trigger.build.param.codeGithubWebHookTrigger.ci.issue_id.desc=議題ID
trigger.build.param.codeGithubWebHookTrigger.ci.issue_iid.desc=議題シリアル番号
trigger.build.param.codeGithubWebHookTrigger.ci.issue_description.desc=議題説明
trigger.build.param.codeGithubWebHookTrigger.ci.issue_state.desc=議題状態
trigger.build.param.codeGithubWebHookTrigger.ci.issue_owner.desc=議題作成者
trigger.build.param.codeGithubWebHookTrigger.ci.issue_milestone_id.desc=議題マイルストーンID
trigger.build.param.codeGithubWebHookTrigger.ci.note_comment.desc=コメント内容
trigger.build.param.codeGithubWebHookTrigger.ci.note_id.desc=コメントID
trigger.build.param.codeGithubWebHookTrigger.ci.repo_id.desc=コードリポジトリID
trigger.build.param.codeGithubWebHookTrigger.ci.note_type.desc=コメントタイプ
trigger.build.param.codeGithubWebHookTrigger.ci.note_author.desc=コメント作成者
trigger.build.param.codeGithubWebHookTrigger.ci.create_time.desc=コメント作成時間
trigger.build.param.codeGithubWebHookTrigger.ci.modify_time.desc=コメント更新時間
trigger.build.param.codeGithubWebHookTrigger.ci.review_id.desc=コードレビューID
trigger.build.param.codeGithubWebHookTrigger.ci.review_iid.desc=レビューシリアル番号
trigger.build.param.codeGithubWebHookTrigger.ci.review_type.desc=レビュータイプ
trigger.build.param.codeGithubWebHookTrigger.ci.review_reviewers.desc=レビュー担当者, カンマ区切り
trigger.build.param.codeGithubWebHookTrigger.ci.review_state.desc=レビュー状態
trigger.build.param.codeGithubWebHookTrigger.ci.review_owner.desc=レビューイベント作成者
trigger.build.param.codeGithubWebHookTrigger.ci.create_ref.desc=作成されたブランチ名/タグ名
trigger.build.param.codeGithubWebHookTrigger.ci.create_type.desc=作成要素タイプ
trigger.build.param.codeGithubWebHookTrigger.PUSH=Githubイベントトリガー - プッシュイベント
trigger.build.param.codeGithubWebHookTrigger.ISSUES=Githubイベントトリガー - 議題イベント
trigger.build.param.codeGithubWebHookTrigger.NOTE=Githubイベントトリガー - コメントイベント
trigger.build.param.codeGithubWebHookTrigger.REVIEW=Githubイベントトリガー - レビューイベント
trigger.build.param.codeGithubWebHookTrigger.CREATE=Githubイベントトリガー - タグ/ブランチ作成イベント
trigger.build.param.codeGithubWebHookTrigger.PULL_REQUEST=Githubイベントトリガー - プルリクエストイベント
trigger.build.param.codeGithubWebHookTrigger.PULL_REQUEST_ACCEPT=Githubイベントトリガー - プルリクエストマージ済イベント
trigger.build.param.codeGithubWebHookTrigger.common=Githubイベントトリガー - 共通変数
trigger.build.param.codeSVNWebHookTrigger.ci.sha.desc=SVNコミットバージョン
trigger.build.param.codeSVNWebHookTrigger.ci.actor.desc=SVNコミッター
trigger.build.param.codeSVNWebHookTrigger.ci.event.desc=トリガーイベント説明
trigger.build.param.codeSVNWebHookTrigger.ci.build_msg.desc=トリガー情報
trigger.build.param.codeSVNWebHookTrigger.ci.repo.desc=トリガーされたコードリポジトリ
trigger.build.param.codeSVNWebHookTrigger.ci.repo_alias_name.desc=BlueKing CIでの別名
trigger.build.param.codeSVNWebHookTrigger.ci.repo_url.desc=トリガーされたコードリポジトリリンク
trigger.build.param.codeSVNWebHookTrigger.POST_COMMIT=SVNイベントトリガー - 共通変数
trigger.build.param.codeP4WebHookTrigger.ci.sha.desc=P4コミットバージョン
trigger.build.param.codeP4极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名WebHookTrigger.ci.actor.desc=P4コミッター
trigger.build.param.codeP4WebHookTrigger.ci.event.desc=トリガーイベントタイプ
trigger.build.param.codeP4WebHookTrigger.ci.build_msg.desc=トリガー情報
trigger.build.param.codeP4WebHookTrigger.ci.repo.desc=トリガーされたコードリポジトリ
trigger.build.param.codeP4WebHookTrigger.ci.repo_alias_name.desc=BlueKing CIでの別名
trigger.build.param.codeP4WebHookTrigger.ci.repo_url.desc=トリガーされたコードリポジトリリンク
trigger.build.param.codeP4WebHookTrigger.common=P4イベントトリガー - 共通変数
bkRepoTriggerPrActionNotMatch=プルリクエストアクション不一致
bkAgentReuseMutex=Agent再利用排他グループMutex[{0}]|
bkAgentReuseMutexAgentIdNull=Agent再利用排他グループMutex|AgentId空|
bkNotSubPipelineExecutePermissionErrorTitle=パイプライン権限代行者[{0}]下記サブパイプライン実行権限なし、保存失敗：
bkNotSubPipelineExecutePermissionErrorMessage=ステージ[{0}]-ジョブ[{1}]-ステップ[{2}]：<a target="_blank" href="{3}">{4}</a>
bkNotSubPipelineExecutePermissionResetErrorTitle=ユーザー[{0}]下記サブパイプライン実行権限なし、権限リセット失敗：
bkPipelineElementCheckFailedMessage=パイプラインプラグイン有効性検証失敗
bkRepoTriggerMrActionNotMatch=マージリクエストアクション不一致
bkRepoTriggerPushActionNotMatch=プッシュアクション不一致
bkRepoTriggerSkipWipNotMatch=WIP段階非トリガー
bkPipelineRunConditionResult=カスタム条件[{0}]計算結果：{1}
bkPipelineRunConditionNotMatch=、条件未達スキップ
bkPipelineRunConditionWithError=カスタム条件計算エラー：{0}
bkAuthorNotPipelineExecutePermission=権限代行者[{0}]当パイプライン実行権限喪失（期限切れ/担当外）、所有者連絡要
transferErrorCheckAgentIdFailed=専用ビルドエージェントデータ異常/不在
transferErrorCheckEnvIdFailed=専用ビルドエージェントクラスタデータ異常/不在
bkSubPipelineCircularDependencyErrorTitle=循環依存存在、保存失敗：
bkCurrentSubPipelineCircularDependencyErrorMessage=当パイプライン循環依存存在
bkSubPipelineCircularDependencyErrorMessage=サブパイプライン[<a target="_blank" href="{0}">{1}</a>]当パイプライン呼出、循環依存形成
bkOtherSubPipelineCircularDependencyErrorMessage=サブパイプライン[<a target="_blank" href="{0}">{1}</a>][<a target="_blank" href="{2}">{3}</a>]呼出、循環依存形成

bkGitPushEventDesc=[{0}] コミット [<a href="{1}" target="_blank">{2}</a>] <span class="trigger-user">{3}</span> プッシュ 
bkGitPushCreateEventDesc=ブランチ [<a href="{1}" target="_blank">{0}</a>] <span class="trigger-user">{3}</span> 作成
bkGitPushDeleteEventDesc=ブランチ [<a href="{1}" target="_blank">{0}</a>] <span class="trigger-user">{3}</span> 削除
bkGitIssueOpenedEventDesc=議題 [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> 作成 
bkGitIssueUpdatedEventDesc=議題 [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> 更新 
bkGitIssueClosedEventDesc=議題 [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> クローズ 
bkGitIssueReopenedEventDesc=議題 [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> 再オープン 
bkGitPrCreatedEventDesc=プルリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> 作成
bkGitPrUpdatedEventDesc=プルリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> 編集
bkGitPrClosedEventDesc=プルリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> クローズ
bkGitPrReopenedEventDesc=プルリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> 再オープン
bkGitPrPushUpdatedEventDesc=プルリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> ソースブランチコミットトリガー
bkGitPrMergedEventDesc=プルリクエスト [<a href="{0}" target="_blank">!{1}</a>] <span class="trigger-user">{2}</span> マージ済
bkGitTagPushEventDesc=[{0}] タグ作成 [<a href="{1}" target="_blank">{2}</a>] <span class="trigger-user">{3}</span> プッシュ
bkGitTagDeleteEventDesc=[{0}] タグ [<a href="{1}" target="_blank">{2}</a>] <span class="trigger-user">{3}</span> 削除
bkGitNoteEventDesc=コメント [极狐GitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリ名<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> 投稿 
bkGitReviewCreatedEventDesc=コードレビュー [<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> 作成
bkGitReviewApprovedEventDesc=コードレビュー [<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> 承認済
bkGitReviewApprovingEventDesc=コードレビュー [<a href="{0}" target="_blank">{1}</a>] レビュー中
bkGitReviewClosedEventDesc=コードレビュー [<a href="{0}" target="_blank">{1}</a>] クローズ済
bkGitReviewChangeDeniedEventDesc=コードレビュー [<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> 拒否
bkGitReviewChangeRequiredEventDesc=コードレビュー [<a href="{0}" target="_blank">{1}</a>] <span class="trigger-user">{2}</span> 修正要求

bkYamlPipelineCreateSuccess=[<a href="{0}" target="_blank">{1}</a>|{2}]作成成功
bkYamlPipelineUpdateSuccess=[<a href="{0}" target="_blank">{1}</a>|{2}]更新成功
bkYamlPipelineDeleteVersionSuccess=[<a href="{0}" target="_blank">{1}</a>|{2}]バージョン削除成功
bkYamlPipelineDeleteSuccess=[{0}|{1}]削除成功
bkYamlPipelineCreateFailed=パイプライン作成失敗
bkYamlPipelineUpdateFailed=パイプライン[<a href="{0}" target="_blank">{1}</a>]更新失敗
bkYamlPipelineDeleteVersionFailed=パイプライン[<a href="{0}" target="_blank">{1}</a>|{2}]バージョン削除失敗
bkYamlPipelineDeleteFailed=パイプライン[<a href="{0}" target="_blank">{1}</a>]削除失敗
bkRepoEnablePacEventDesc=<span class="trigger-user">{0}</span> PAC有効化